inline Expression::Expression() : m_customOperators(NULL), m_result(0)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline void Expression::setCustomOperators( const OperatorEntry* customOperators )
{
	m_customOperators = customOperators;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline double Expression::result() const
{
	return m_result;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Expression::Node::Node( double value )
{
	m_type = OPERAND;
	m_value = value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Expression::Node::Node( Operator* op )
{
	m_type = OPERATOR;
	m_op = op;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Expression::Node::Type Expression::Node::type() const
{
	return m_type;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline double Expression::Node::value() const
{
	return m_value;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Expression::Operator* Expression::Node::op() const
{
	return m_op;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline Expression::Operator::Operator( const std::string& name, unsigned int priority, unsigned int parameters )
	: m_name(name), m_priority(priority), m_parameters(parameters)
{
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline const std::string& Expression::Operator::name() const
{
	return m_name;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline unsigned int Expression::Operator::parameters() const
{
	return m_parameters;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

inline unsigned int Expression::Operator::priority() const
{
	return m_priority;
}
